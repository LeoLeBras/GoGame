@charset "UTF-8";

a,abbr,acronym,address,big,blockquote,body,caption,cite,code,dd,del,dfn,div,dl,dt,em,fieldset,figure,form,h1,h2,h3,h4,h5,h6,html,iframe,img,ins,kbd,label,legend,li,object,ol,p,pre,q,samp,small,span,strike,sub,sup,table,tbody,td,tfoot,th,thead,tr,tt,ul,var {
    margin: 0;
    padding: 0;
    border: 0;
    outline: 0;
    font-weight: inherit;
    font-style: inherit;
    font-size: 100%;
    font-family: inherit;
    vertical-align: baseline;
    box-sizing: border-box
}

ol,ul {
    list-style: none
}

caption,td,th {
    text-align: left;
    font-weight: 400
}

blockquote:after,blockquote:before,q:after,q:before {
    content: ""
}

blockquote,q {
    quotes: none
}

table {
    border-collapse: collapse;
    border-spacing: 0
}

html {
    font-size: 100%;
    font-family: 'Bebas Neue'
}

body {
    font-size: 1rem;
    line-height: 1.5rem
}

.ChoosePlayer {
    text-align: center
}

.ChoosePlayer_title {
    display: inline-block;
    width: 25rem;
    font-size: 4.375rem;
    line-height: 3.8125rem;
    font-weight: 700;
    color: #fff;
    margin-top: 5%
}

.ChoosePlayer_title .-italic {
    display: inline-block;
    font-style: italic;
    margin: 0 1rem 0 .375rem
}

.ChoosePlayer_title .-yellow {
    color: #ffd84e
}

.ChoosePlayer_title .-purple {
    color: #966ad1
}

.ChoosePlayer_item {
    position: absolute;
    z-index: -1;
    top: 0;
    width: 50%;
    height: 100%;
    background: #ccc;
    -webkit-transition: opacity .2s ease;
    transition: opacity .2s ease
}

.ChoosePlayer_item.-yellow {
    background: #ffd84e
}

.ChoosePlayer_item.-purple {
    left: 50%;
    background: #966ad1
}

.ChoosePlayer_item:hover {
    opacity: .85
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLmNzcyIsIiRzdGRpbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiaUJBZTJDLEVBQUEsS0FBQSxRQUFBLFFBQUEsSUFBQSxXQUEzQyxLQUEyQyxRQUFBLEtBQUEsS0FBQSxHQUFBLElBQUEsSUFBM0MsSUFBMkMsR0FBQSxHQUFBLEdBQUEsU0FBQSxPQUFBLEtBQTNDLEdBQTJDLEdBQUEsR0FBQSxHQUFBLEdBQUEsR0FBM0MsS0FBQSxPQUEyQyxJQUFBLElBQUEsSUFBQSxNQUFBLE9BQUEsR0FBM0MsT0FBMkMsR0FBQSxFQUFBLElBQUEsRUFBQSxLQUFBLE1BQTNDLEtBQTJDLE9BQUEsSUFBQSxJQUFBLE1BQUEsTUFBQSxHQUFBLE1BQUEsR0FBQSxNQUFBLEdBQUEsR0FBQSxHQUFBLElBQzNDLE9BQUEsRUNDRSxRQUFTLEVBQ1QsT0FBUSxFRENOLFFBQUEsRUFDSixZQUFBLFFDQ0UsV0FBWSxRQUNaLFVBQVcsS0FDWCxZQUFhLFFEQ1osZUFBQSxTQUNILFdBQUEsV0NFQSxHQUFJLEdBQ0YsV0FBWSxLRE1YLFFBQUEsR0FBQSxHQUNILFdBQUEsS0NDRSxZQUFhLElERVgsaUJBQUEsa0JBQUEsUUFBQSxTQUNKLFFBQUEsR0NFQSxXQUFZLEVEQ1IsT0FBQSxLQ0VKLE1BQ0UsZ0JBQWlCLFNBQ2pCLGVBQWdCLEVBS2xCLEtEQ0ksVUFBQSxLQUNKLFlBQUEsYUNFQSxLQUNFLFVBQVcsS0RDVCxZQUFBLE9DT0osY0FDRSxXQUFZLE9BQ1osb0JEQ0MsUUFBQSxhQUNILE1BQUEsTUFDWSxVQUFBLFNBQ0MsWUFBQSxVQUNELFlBQUEsSUFDVixNQUFXLEtBQ1gsV0FBQSxHQUNvQiw2QkFDcEIsUUFBZ0IsYUFDaEIsV0FBcUIsT0FDckIsT0FBQSxFQUFBLEtBQUEsRUFBeUIsUUFDQSw2QkNDckIsTUFBTyxRRENiLDZCQUNFLE1BQWlCLFFDQ2pCLG1CRENGLFNBQUEsU0FDRSxRQUFBLEdBQ0EsSUFBQSxFQ0NFLE1BQU8sSURDWCxPQUFBLEtBQ0UsV0FBaUIsS0FDakIsbUJBQXNCLFFBQUEsSUFBQSxLQ0NaLFdBQVksUUFBUSxJQUFJLEtEQ3BDLDJCQUNjLFdBQUUsUUNDWiwyQkRDSixLQUFBLElBQ2UsV0FBRSxRQ0NiLHlCRENKLFFBQUEiLCJmaWxlIjoic3R5bGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xuLyoqXG4gICogTMOpbyBMZSBCcmFzXG4gICogaHR0cDovL2xlb2xlYnJhcy5jb20vXG4gICpcbiAgKiBXb3JrIHdpdGggU2Fzc1xuICAqIGh0dHA6Ly9zYXNzLWxhbmcuY29tL1xuICAqXG4gICogQ29weXJpZ2h0IDIwMTIsIDIwMTRcbiAgKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2VcbiAgKiBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUXG4gICpcbiAgKiBEYXRlIG9mIGNyZWF0aW9uIDogMjAxMi0wOS0wNVxuICAqIExhc3QgdXBkYXRlZDogMjAxNS0xMS0wNVxuICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyoqXG4gICogQ29yZVxuICAqXG4gICovXG4vKipcbiAqIENvbG9yc1xuICpcbiAqIEByZXR1cm4gdmFyc1xuICovXG4vKipcbiAqIEZvbnRzIFNldHRpbmdzXG4gKlxuICogQHJldHVybiBhcnJheVxuICovXG4vKipcbiAqIEJyZWFrcG9pbnRzXG4gKlxuICogQHJldHVybiBhcnJheVxuICovXG4vKipcbiAgKiBGb250IHNldHRpbmdzXG4gICpcbiAgKi9cbi8qKlxuICAqIENsZWFyZml4XG4gICpcbiAgKi9cbi8qKlxuICAqIFJlc3BvbmQtdG9cbiAgKlxuICAqIEBwYXJhbXMgJGJyZWFrcG9pbnRcbiAgKiBAcmV0dXJuIENTUyBtZWRpYSBxdWVyaWVzIHdpdGggQGNvbnRlbnRcbiAgKi9cbi8qKlxuICAqIEZvbnQtc2V0dGluZ3NcbiAgKlxuICAqL1xuLyoqXG4gICogU3RyaXAgdW5pdHNcbiAgKlxuICAqIEByZXR1cm4gdmFyIHdpdGhvdXQgdW5pdHNcbiAgKi9cbi8qKlxuICAqIFNxdWFyZVxuICAqXG4gICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKipcbiAqIENTUyBSZXNldFxuICogQW4gYWRhcHRhdGlvbiBvZiBodHRwOi8vbWV5ZXJ3ZWIuY29tL2VyaWMvdG9vbHMvY3NzL3Jlc2V0LyAgKEVyaWMgTWV5ZXIpXG4gKlxuICovXG5odG1sLCBib2R5LCBkaXYsIHNwYW4sIG9iamVjdCwgaWZyYW1lLCBoMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBwcmUsIGEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGJpZywgY2l0ZSwgY29kZSwgZGVsLCBkZm4sIGVtLCBpbWcsIGlucywga2JkLCBxLCBzYW1wLCBzbWFsbCwgc3RyaWtlLCBzdWIsIHN1cCwgdHQsIHZhciwgZGwsIGR0LCBkZCwgb2wsIHVsLCBsaSwgZmllbGRzZXQsIGZvcm0sIGxhYmVsLCBsZWdlbmQsIHRhYmxlLCBjYXB0aW9uLCB0Ym9keSwgdGZvb3QsIHRoZWFkLCB0ciwgdGgsIHRkLCBmaWd1cmUge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgb3V0bGluZTogMDtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG4gIGZvbnQtc3R5bGU6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG5vbCwgdWwge1xuICBsaXN0LXN0eWxlOiBub25lOyB9XG5cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBzZXBhcmF0ZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7IH1cblxuY2FwdGlvbiwgdGgsIHRkIHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDsgfVxuXG5ibG9ja3F1b3RlOmJlZm9yZSwgYmxvY2txdW90ZTphZnRlciwgcTpiZWZvcmUsIHE6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiOyB9XG5cbmJsb2NrcXVvdGUsIHEge1xuICBxdW90ZXM6IG5vbmU7IH1cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDsgfVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKipcbiAgKiBBcHAgc3R5bGVcbiAgKlxuICAqL1xuLyoqXG4gKiBFc3RhYmxpc2ggZm9udCBzZXR0aW5nc1xuICogQHdpdGggbWl4aW4gXCJmb250LXNldHRpbmdzXCIgaW4gdmVuZG9ycy9mdW5jdGlvbnMvXG4gKi9cbmh0bWwge1xuICBmb250LXNpemU6IDEwMCU7XG4gIGZvbnQtZmFtaWx5OiAnQmViYXMgTmV1ZSc7IH1cblxuYm9keSB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDI0cHg7IH1cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyoqXG4gKiBIZWFkaW5nc1xuICpcbiAqL1xuLyoqXG4gKiBQYXJhZ3JhcGhcbiAqXG4gKi9cbi8qKlxuICogRm9ybSBzdHlsZVxuICpcbiAqL1xuLyoqIFxuICogQ2hvb3NlUGxheWVyIENvbXBvbmVudCBTdHlsZVxuICpcbiAqL1xuLkNob29zZVBsYXllciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAuQ2hvb3NlUGxheWVyX3RpdGxlIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDQwMHB4O1xuICAgIGZvbnQtc2l6ZTogNzBweDtcbiAgICBsaW5lLWhlaWdodDogNjFweDtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBtYXJnaW4tdG9wOiA1JTsgfVxuICAgIC5DaG9vc2VQbGF5ZXJfdGl0bGUgLi1pdGFsaWMge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgICAgbWFyZ2luOiAwIDE2cHggMCA2cHg7IH1cbiAgICAuQ2hvb3NlUGxheWVyX3RpdGxlIC4teWVsbG93IHtcbiAgICAgIGNvbG9yOiAjZmZkODRlOyB9XG4gICAgLkNob29zZVBsYXllcl90aXRsZSAuLXB1cnBsZSB7XG4gICAgICBjb2xvcjogIzk2NmFkMTsgfVxuICAuQ2hvb3NlUGxheWVyX2l0ZW0ge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB6LWluZGV4OiAtMTtcbiAgICB0b3A6IDA7XG4gICAgd2lkdGg6IDUwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgYmFja2dyb3VuZDogI2NjYztcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4ycyBlYXNlOyB9XG4gICAgLkNob29zZVBsYXllcl9pdGVtLi15ZWxsb3cge1xuICAgICAgYmFja2dyb3VuZDogI2ZmZDg0ZTsgfVxuICAgIC5DaG9vc2VQbGF5ZXJfaXRlbS4tcHVycGxlIHtcbiAgICAgIGxlZnQ6IDUwJTtcbiAgICAgIGJhY2tncm91bmQ6ICM5NjZhZDE7IH1cbiAgICAuQ2hvb3NlUGxheWVyX2l0ZW06aG92ZXIge1xuICAgICAgb3BhY2l0eTogLjg1OyB9XG5cbi8qKlxuICogSG9tZSBQYWdlIFN0eWxlXG4gKlxuICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4iLG51bGxdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ== */