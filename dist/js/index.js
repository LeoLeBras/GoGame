!function e(t,i,r){function n(o,s){if(!i[o]){if(!t[o]){var h="function"==typeof require&&require;if(!s&&h)return h(o,!0);if(a)return a(o,!0);throw new Error("Cannot find module '"+o+"'")}var l=i[o]={exports:{}};t[o][0].call(l.exports,function(e){var i=t[o][1][e];return n(i?i:e)},l,l.exports,e,t,i,r)}return i[o].exports}for(var a="function"==typeof require&&require,o=0;o<r.length;o++)n(r[o]);return n}({1:[function(e,t,i){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function n(){var e=new s;e.run();var t=new o;t.listenner()}var a=function(){function e(e,t){for(var i=0;i<t.length;i++){var r=t[i];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,i,r){return i&&e(t.prototype,i),r&&e(t,r),t}}(),o=function(){function e(){r(this,e),this.$goban=Sprint(v.gameplay.element),this.Gameplay=new h,this.listenner()}return a(e,[{key:"listenner",value:function(){var e=this;Sprint(this.$goban).on("click",function(t){e.Gameplay.addRock(t)&&(e.Gameplay.updateChains(),e.Gameplay.updateGoban(),e.Gameplay.switchPlayers())},this)}}]),e}(),s=function(){function e(){r(this,e),this.grid=v.grid.nbre,this.gridborderWidth=v.grid.borderWidth,this.cellSize=v.grid.cellSize,this.gridSize=(parseInt(this.grid)+1)*this.cellSize,this.$goban=Sprint(v.goban.element),this.$goban_gameplay=Sprint(v.gameplay.element),this.$goban_grid=Sprint(v.grid.element),this.gridCanvas=this.$goban_grid.dom[0].getContext("2d"),this.gameplayCanvas=this.$goban_gameplay.dom[0].getContext("2d")}return a(e,[{key:"buildGoban",value:function(){this.$goban.css({width:this.gridSize,height:this.gridSize})}},{key:"buildGameplay",value:function(){this.$goban_gameplay.dom[0].width=this.gridSize,this.$goban_gameplay.dom[0].height=this.gridSize,this.$goban_gameplay.css({width:this.gridSize,height:this.gridSize})}},{key:"buildGrid",value:function(){this.$goban_grid.dom[0].width=this.gridSize,this.$goban_grid.dom[0].height=this.gridSize,this.$goban_grid.css({width:this.gridSize,height:this.gridSize});for(var e=this.gridCanvas,t=1;t<=this.grid;t++)e.beginPath(),e.moveTo(this.cellSize,this.cellSize*t),e.lineTo(this.gridSize-this.cellSize,this.cellSize*t),e.lineWidth=this.gridborderWidth,e.stroke();for(var i=1;i<=this.grid;i++)e.beginPath(),e.moveTo(this.cellSize*i,this.cellSize),e.lineTo(this.cellSize*i,this.gridSize-this.cellSize),e.lineWidth=this.gridborderWidth,e.stroke()}},{key:"run",value:function(){this.buildGoban(),this.buildGameplay(),this.buildGrid()}}]),e}(),h=function(){function e(){for(r(this,e),this.$goban=Sprint(v.gameplay.element),this.canvas=this.$goban.dom[0].getContext("2d"),this.grid=v.grid.nbre,this.cellSize=v.grid.cellSize,this.rock,this.rockSize=v.rock.size,this.rockPlayer1=v.rock.player1,this.rockPlayer2=v.rock.player2,this.player=new g("current"),this.ennemy=new g("ennemy"),this.cache=[],this.x=1;this.x<=this.grid;this.x++)for(this.y=1;this.y<=this.grid;this.y++)f.add({x:this.x,y:this.y})}return a(e,[{key:"switchPlayers",value:function(){this.player.next(),this.ennemy.next()}},{key:"getRock",value:function(){var e=void 0===arguments[0]?"complete":arguments[0],t={x:this.x,y:this.y};return"simple"==e?t:f.select(t)}},{key:"addRock",value:function(e){if(this.x=Math.floor((e.layerX+this.cellSize/2)/this.cellSize),this.y=Math.floor((e.layerY+this.cellSize/2)/this.cellSize),1<=this.x&&this.x<=this.grid&&1<=this.y&&this.y<=this.grid&&0==this.getRock().getPlayer()){console.log("****"),console.log("Player "+this.player.get()+" en "+this.x+";"+this.y),this.getRock().add(this.player);var t=v.rock.player1;2==this.player.get()&&(t=v.rock.player2);var i=this.canvas;return i.beginPath(),i.arc(this.x*this.cellSize,this.y*this.cellSize,this.rockSize/2,0,2*Math.PI,!1),i.closePath(),i.fillStyle=t,i.fill(),!0}return!1}},{key:"updateChains",value:function(){var e=this.getRock().getNeighboringRocks("current");if(0!=e.length){var t=[],i=!0,r=!1,n=void 0;try{for(var a,o=e[Symbol.iterator]();!(i=(a=o.next()).done);i=!0){var s=a.value;-1==t.indexOf(s.getChain())&&t.push(s.getChain())}}catch(h){r=!0,n=h}finally{try{!i&&o["return"]&&o["return"]()}finally{if(r)throw n}}if(1==t.length){console.log("Add");var l=t[0]}else{console.log("Join"),t=t.sort();var g=t[0],y=!0,d=!1,f=void 0;try{for(var v,k=t.reverse()[Symbol.iterator]();!(y=(v=k.next()).done);y=!0){var b=v.value;if(b!=g){var m=!0,p=!1,S=void 0;try{for(var x,z=u[b].getRocks()[Symbol.iterator]();!(m=(x=z.next()).done);m=!0){var w=x.value;this.getRock().setChain(g),u[g].addRock(w)}}catch(h){p=!0,S=h}finally{try{!m&&z["return"]&&z["return"]()}finally{if(p)throw S}}u[b].remove()}}}catch(h){d=!0,f=h}finally{try{!y&&k["return"]&&k["return"]()}finally{if(d)throw f}}var l=g}}else{console.log("Create");var l=u.length;u[l]=new c}u[l].addRock(this.getRock("simple")),this.getRock().setChain(l)}},{key:"updateGoban",value:function(){var e=this.getRock().getNeighboringRocks("ennemy");if(0!=e.length){var t=[],i=!0,r=!1,n=void 0;try{for(var a,o=e[Symbol.iterator]();!(i=(a=o.next()).done);i=!0){var s=a.value;-1==t.indexOf(s.getChain())&&t.push(s.getChain())}}catch(h){r=!0,n=h}finally{try{!i&&o["return"]&&o["return"]()}finally{if(r)throw n}}var l=!0,c=!1,g=void 0;try{for(var y,d=t[Symbol.iterator]();!(l=(y=d.next()).done);l=!0){var f=y.value;if(0==u[f].getLiberties()){console.log("Dead");var v=!0,k=!1,b=void 0;try{for(var m,p=u[f].getRocks()[Symbol.iterator]();!(v=(m=p.next()).done);v=!0){m.value}}catch(h){k=!0,b=h}finally{try{!v&&p["return"]&&p["return"]()}finally{if(k)throw b}}}}}catch(h){c=!0,g=h}finally{try{!l&&d["return"]&&d["return"]()}finally{if(c)throw g}}}}}]),e}(),l=(function(){function e(){r(this,e)}return a(e,[{key:"update",value:function(){}}]),e}(),function(){function e(){r(this,e),this.chains=[]}return a(e,[{key:"add",value:function(e){this.chains[e]=new c(rock)}},{key:"select",value:function(e){return this.chains[e]}}]),e}()),c=function(){function e(){r(this,e),this.rocks=[],this.border=[],this.territory=[],this.state="alive"}return a(e,[{key:"addRock",value:function(e){this.rocks.push(e)}},{key:"getRocks",value:function(){return this.rocks.sort()}},{key:"remove",value:function(){this.rocks=[],this.state="dead"}},{key:"getBorders",value:function(){var e=void 0===arguments[0]?"objects":arguments[0],t=(f[this.rocks[0].x][this.rocks[0].y].getPlayer(),!0),i=!1,r=void 0;try{for(var n,a=this.rocks[Symbol.iterator]();!(t=(n=a.next()).done);t=!0){var o=n.value;4!=f[o.x][o.y].getNeighboringRocks(f,"current").length&&this.border.push(o)}}catch(s){i=!0,r=s}finally{try{!t&&a["return"]&&a["return"]()}finally{if(i)throw r}}return"count"==e?this.border.length:this.border.sort()}},{key:"getLiberties",value:function(){void 0===arguments[0]?"objects":arguments[0];this.liberties=0;var e=!0,t=!1,i=void 0;try{for(var r,n=this.getBorders(f)[Symbol.iterator]();!(e=(r=n.next()).done);e=!0){var a=r.value;f.select(a)}}catch(o){t=!0,i=o}finally{try{!e&&n["return"]&&n["return"]()}finally{if(t)throw i}}return console.log(this.liberties),this.liberties}}]),e}(),u=new l,g=function(){function e(t){r(this,e),this.name=1,"ennemy"==t&&(this.name=2)}return a(e,[{key:"next",value:function(){this.name=this.name++%2+1}},{key:"get",value:function(){void 0===arguments[0]?"current":arguments[0];return this.name}}]),e}(),y=function(){function e(){r(this,e),this.rocks=[]}return a(e,[{key:"add",value:function(e){void 0==this.rocks[e.x]&&(this.rocks[e.x]=[]),this.rocks[e.x][e.y]=new d(e)}},{key:"select",value:function(e){return void 0!=this.rocks[e.x]&&void 0!=this.rocks[e.x][e.y]?this.rocks[e.x][e.y]:!1}}]),e}(),d=function(){function e(t){r(this,e),this.chain=0,this.x=t.x,this.y=t.y,this.player=0}return a(e,[{key:"add",value:function(e){this.player=e.get()}},{key:"getNeighboringRocks",value:function(){var e=void 0===arguments[0]?"all":arguments[0];this.neighboringRocks=[],this.cache=[];for(var t=1;4>=t;t++){var i=this.x,r=this.y;switch(t){case 1:r-=1;break;case 2:i++;break;case 3:r++;break;case 4:i-=1}var n=f.select({x:i,y:r});n&&0!=n.getPlayer()&&this.cache.push(n)}if("all"!=e){var a=(this.getPlayer()+2)%2+1;"current"==e&&(a=this.getPlayer());for(var t in this.cache){var o=this.cache[t];o.getPlayer()==a&&this.neighboringRocks.push(o)}}else this.neighboringRocks=this.cache;return this.neighboringRocks.sort()}},{key:"getPlayer",value:function(){return this.player}},{key:"setChain",value:function(e){this.chain=e}},{key:"getChain",value:function(){return this.chain}}]),e}(),f=new y,v={goban:{element:".Game_goban"},gameplay:{element:".Game_goban_gameplay"},grid:{nbre:"19",element:".Game_goban_grid",cellSize:40,backgroundColor:"white",borderColor:"black",borderWidth:2},rock:{size:20,player1:"grey",player2:"black"}};n()},{}]},{},[1]);